{"version":3,"file":"leaflet-routing-openroute.min.js","sources":["../src/leaflet-routing-openroute.js"],"sourcesContent":["/* @preserve\n *\n * Leaflet Routing Machine / OpenRoute Service\n * Version 0.1.9\n * \n * Extends Leaflet Routing Machine with support for OpenRoute Service\n * https://openrouteservice.org/dev/#/api-docs/v2/directions/\n * \n * ## Dependancies:\n * - Leaflet Routing Machine http://www.liedman.net/leaflet-routing-machine/\n * \n * This plugin is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as \n * published by the Free Software Foundation, either version 3 of the \n * License, or (at your option) any later version.\n * \n * This plugin is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. \n * See the GNU Affero General Public License for more details.\n * \n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <https://www.gnu.org/licenses/>\n * \n * Copyright (c) 20Z0 GÃ©rald Niel (https://framagit.org/gegeweb)\n * \n * @license magnet:?xt=urn:btih:0b31508aeb0634b347b8270c7bee4d411b5d4109&dn=agpl-3.0.txt AGPL-v3-or-later\n */\n\n(function(factory) {\n\t// Packaging/modules magic dance\n\tvar L;\n\tif (typeof define === 'function' && define.amd) {\n\t\t// AMD\n\t\tdefine(['leaflet'], factory);\n\t} else if (typeof module !== 'undefined') {\n\t\t// Node/CommonJS\n\t\tL = require('leaflet');\n\t\tmodule.exports = factory(L);\n\t} else {\n\t\t// Browser globals\n\t\tif (typeof window.L === 'undefined')\n\t\t\tthrow 'Leaflet must be loaded first';\n\t\tif (typeof window.L.Routing === 'undefined')\n\t\t\tthrow 'Leaflet Routing Machine must be loaded first'\n\t\tfactory(window.L);\n\t}\n}(function(L) {\n\t'use strict';\n\tL.Routing = L.Routing || {};\n\tL.routing = L.routing || {};\n\n\tL.Routing.OpenRouteService = L.Class.extend({\n\t\tversion: '0.1.9',\n\t\toptions: {\n\t\t\t\"timeout\": 30 * 1000, // 30\"\n\t\t\t\"host\": \"https://api.openrouteservice.org\",\n\t\t\t\"service\": \"directions\",\n\t\t\t\"api_version\": \"v2\",\n\t\t\t\"profile\": \"cycling-road\",\n\t\t\t\"routingQueryParams\": {\n\t\t\t\t\"attributes\": [\n\t\t\t\t\t\"avgspeed\",\n\t\t\t\t\t\"percentage\"\n\t\t\t\t],\n\t\t\t\t\"language\": \"fr-fr\",\n\t\t\t\t\"maneuvers\": \"true\",\n\t\t\t\t\"preference\": \"recommended\",\n\t\t\t}\n\t\t},\n\n\t\tinitialize: function(token, options) {\n\t\t\tL.Util.setOptions(this, options);\n\t\t\tthis._token = token;\n\t\t},\n\n\t\troute: function(waypoints, callback, context, options) {\n\n\t\t\tlet timedOut = false,\n\t\t\t\twps = [],\n\t\t\t\ttimer,\n\t\t\t\tcoords = [],\n\t\t\t\topts = this.options || {},\n\t\t\t\tparams = opts.routingQueryParams || {};\n\n\t\t\ttimer = setTimeout(function() {\n\t\t\t\ttimedOut = true;\n\t\t\t\tcallback.call(context || callback, {\n\t\t\t\t\tstatus: -1,\n\t\t\t\t\tmessage: 'OpenRoute Service request timed out.'\n\t\t\t\t});\n\t\t\t}, opts.timeout);\n\n\n\t\t\t// Create a copy of the waypoints, since they\n\t\t\t// might otherwise be asynchronously modified while\n\t\t\t// the request is being processed.\n\t\t\twaypoints.forEach((wp) => {\n\t\t\t\tlet c = wp.latLng;\n\t\t\t\twps.push({\n\t\t\t\t\tlatLng: wp.latLng,\n\t\t\t\t\tname: wp.name,\n\t\t\t\t\toptions: wp.options\n\t\t\t\t});\n\t\t\t\t// Array of waypoints [lng, lat] to be passed to\n\t\t\t\t// the route request \n\t\t\t\tcoords.push([c.lng, c.lat]);\n\t\t\t});\n\t\t\t// Add the array of coords (wp) to the requests\n\t\t\tL.extend(params, { coordinates: coords });\n\n\t\t\tlet request = this._requestPost(params);\n\n\t\t\trequest.then(datas => {\n\t\t\t\t\tif (!timedOut) {\n\t\t\t\t\t\tclearTimeout(timer);\n\t\t\t\t\t\tif (datas.error) {\n\t\t\t\t\t\t\tlet err = datas.error;\n\t\t\t\t\t\t\tdatas.response.then(resp => {\n\t\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\t\tif (resp) {\n\t\t\t\t\t\t\t\t\t\tresp = JSON.parse(resp);\n\t\t\t\t\t\t\t\t\t\terr.status = resp.error.code;\n\t\t\t\t\t\t\t\t\t\terr.message = resp.error.message;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tcallback.call(context || callback, {\n\t\t\t\t\t\t\t\t\t\tstatus: err.status || -1,\n\t\t\t\t\t\t\t\t\t\tmessage: err.message,\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\t\t\t\tconsole.error(e);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tif (opts.format == 'gpx')\n\t\t\t\t\t\t\t\tcallback.call(context || callback, datas);\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\tthis._routeDone(datas, wps, callback, context)\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\t.catch(err => {\n\t\t\t\t\tif (!timedOut) {\n\t\t\t\t\t\tclearTimeout(timer);\n\t\t\t\t\t\tcallback.call(context || callback, {\n\t\t\t\t\t\t\tstatus: err.status || -1,\n\t\t\t\t\t\t\tmessage: err.message,\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\treturn this;\n\t\t},\n\n\t\t_requestPost(params) {\n\n\t\t\tlet url = this._buildUrl(),\n\t\t\t\theaders = this._setHeaders(),\n\t\t\t\topts = {\n\t\t\t\t\tmethod: 'POST',\n\t\t\t\t\theaders: headers,\n\t\t\t\t\tbody: JSON.stringify(params)\n\t\t\t\t},\n\t\t\t\tformat = this.options.format;\n\n\t\t\tconst promise = fetch(url, opts)\n\t\t\t\t.then(response => {\n\t\t\t\t\tif (response.ok) {\n\t\t\t\t\t\tif (format == 'gpx') {\n\t\t\t\t\t\t\treturn response.text();\n\t\t\t\t\t\t} else\n\t\t\t\t\t\t\treturn response.json();\n\t\t\t\t\t} else {\n\t\t\t\t\t\tlet status = response.status,\n\t\t\t\t\t\t\tmessage = response.statusText,\n\t\t\t\t\t\t\terr = new Error(message);\n\t\t\t\t\t\terr.status = status;\n\t\t\t\t\t\treturn { error: err, response: response.text() }\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\treturn promise;\n\t\t},\n\n\t\t/**\n\t\t * Build the Url of service\n\t\t * by default if not defined in opts :\n\t\t * // https://api.openrouteservice.org/v2/directions/cyling_road\n\t\t * \n\t\t * @param {Object} opts (optional)\n\t\t * \n\t\t * @return {String} url\n\t\t */\n\t\t_buildUrl: function(opts) {\n\t\t\topts = opts || this.options;\n\t\t\tlet url = opts.host || \"https://api.openrouteservice.org\";\n\t\t\turl += `/${(opts.api_version || \"v2\")}`;\n\t\t\turl += `/${(opts.service || \"directions\")}`;\n\t\t\turl += `/${(opts.profile || \"cycling_road\")}`;\n\t\t\turl += opts.format ? `/${opts.format}` : '';\n\n\t\t\treturn url;\n\t\t},\n\n\t\t/**\n\t\t * Set the Headers\n\t\t * \n\t\t * @param {String} api_key (optionnal)\n\t\t * \n\t\t * @returns {Object} headers \n\t\t */\n\t\t_setHeaders: function(api_key) {\n\t\t\tapi_key = api_key || this._token;\n\t\t\tlet headers = new Headers();\n\t\t\theaders.append('Accept', 'application/json, application/geo+json, application/gpx+xml, img/png; charset=utf-8');\n\t\t\theaders.append('Content-Type', 'application/json');\n\t\t\theaders.append('Authorization', api_key);\n\n\t\t\treturn headers;\n\t\t},\n\n\t\t_routeDone: function(datas, inputWaypoints, callback, context) {\n\n\t\t\t// **** DEBUG ****\n\t\t\t//console.log(datas);\n\t\t\t// **** DEBUG ****\n\n\t\t\tlet alts = [],\n\t\t\t\tformat = this.options.format,\n\t\t\t\tisgeoJSON = format === 'geojson',\n\t\t\t\troutes = isgeoJSON ? datas.features : datas.routes;\n\n\t\t\t// **** DEBUG ****\n\t\t\t// console.log(routes);\n\t\t\t// **** DEBUG ****\n\n\t\t\troutes.forEach((route, idr) => {\n\t\t\t\tlet geom = route.geometry,\n\t\t\t\t\tinstructions = [],\n\t\t\t\t\tsummary = isgeoJSON ? route.properties.summary : route.summary,\n\t\t\t\t\tway_points = isgeoJSON ? route.properties.way_points : route.way_points,\n\t\t\t\t\tsegments = isgeoJSON ? route.properties.segments : route.segments,\n\t\t\t\t\topts = this.options.routingQueryParams,\n\t\t\t\t\televation = (opts.elevation === 'true' || opts.elevation === true),\n\t\t\t\t\tcoordinates = isgeoJSON ? geom.coordinates : this._decodePolyline(geom, elevation),\n\t\t\t\t\tspeed = this._bikeSpeed(this.options.profile), // speed in km/h\n\t\t\t\t\tmulti = 3.6;\n\t\t\t\t// durations are in meter/s and distance in km \n\t\t\t\t// so duration = ( distance / (speed * 1000) ) * 3600\n\t\t\t\t// we can symplify: duration = ( distance / speed ) * 3.6\n\n\t\t\t\tif (isgeoJSON) {\n\t\t\t\t\tlet tmp = new Array(coordinates.length);\n\t\t\t\t\tcoordinates.forEach((c, i) => {\n\t\t\t\t\t\tlet latlng = [c[1], c[0]];\n\t\t\t\t\t\tif (elevation)\n\t\t\t\t\t\t\tlatlng.push(c[2] != 'unedifned' ? c[2] : null);\n\t\t\t\t\t\ttmp[i] = L.latLng(latlng);\n\t\t\t\t\t});\n\t\t\t\t\tcoordinates = tmp;\n\t\t\t\t}\n\n\t\t\t\tlet routeWaypoints = new Array(way_points.length);\n\t\t\t\tfor (let i = 0; i < way_points.length; i++) {\n\t\t\t\t\trouteWaypoints[i] = coordinates[way_points[i]];\n\t\t\t\t}\n\n\t\t\t\t// **** DEBUG ****\n\t\t\t\t// console.log(routeWaypoints);\n\t\t\t\t// **** DEBUG ****\n\n\t\t\t\tsegments.forEach((segment, ids) => {\n\t\t\t\t\tlet steps = segment.steps,\n\t\t\t\t\t\tlastsegment = ids == segments.length - 1;\n\t\t\t\t\tsteps.forEach((step, idx) => {\n\t\t\t\t\t\tlet laststep = idx == steps.length - 1,\n\t\t\t\t\t\t\tarrive = (lastsegment && laststep),\n\t\t\t\t\t\t\tstartseg = (idx == 0 && ids > 0);\n\n\t\t\t\t\t\tinstructions.push({\n\t\t\t\t\t\t\tidseg: ids + 1,\n\t\t\t\t\t\t\tdistance: step.distance,\n\t\t\t\t\t\t\ttime: (step.distance / speed) * multi, // overide step.duration\n\t\t\t\t\t\t\troad: step.name === '-' ? '' : step.name,\n\t\t\t\t\t\t\ttext: step.instruction || null,\n\t\t\t\t\t\t\ticon: this._typeToIcon(step.type, arrive, startseg),\n\t\t\t\t\t\t\ttype: step.type,\n\t\t\t\t\t\t\texit: step.exit_number || null,\n\t\t\t\t\t\t\tmodifier: this._typeToModifier(step.type, arrive, startseg), //arrive ? 'arrive' : startseg ? 'continue' : step.type === 11 ? 'head' : '',\n\t\t\t\t\t\t\tdirection: this._bearingToDirection(step.maneuver.bearing_after),\n\t\t\t\t\t\t\tindex: step.way_points[0],\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\t// ***** DEBUG ******\n\t\t\t\t\t\t// console.log(ids, idx, step.type, instructions[idx].type, step.instruction)\n\t\t\t\t\t\t// ***** DEBUG ******\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t\talts.push({\n\t\t\t\t\tname: 'InitinÃ©raire',\n\t\t\t\t\tcoordinates: coordinates,\n\t\t\t\t\tinstructions: instructions,\n\t\t\t\t\tsummary: {\n\t\t\t\t\t\ttotalTime: (summary.distance / speed) * multi, // overide summary.duration\n\t\t\t\t\t\ttotalDistance: summary.distance,\n\t\t\t\t\t\ttotalAscend: isgeoJSON ? route.properties.ascent : summary.ascent,\n\t\t\t\t\t\ttotalDescend: isgeoJSON ? route.properties.descent : summary.descent\n\t\t\t\t\t},\n\t\t\t\t\tinputWaypoints: inputWaypoints,\n\t\t\t\t\t//actualWaypoints: this._toWaypoints(inputWaypoints, routeWaypoints),\n\t\t\t\t\twaypoints: this._toWaypoints(inputWaypoints, routeWaypoints),\n\t\t\t\t\twaypointIndices: way_points\n\t\t\t\t});\n\n\t\t\t\t// **** DEBUG ****\n\t\t\t\t// console.log(alts);\n\t\t\t\t// **** DEBUG ****\n\t\t\t});\n\t\t\tcallback.call(context, null, alts);\n\t\t},\n\n\t\t/**\n\t\t * Return the estimated avg speed from profile (bike type)\n\t\t * \n\t\t * @param {String} bike\n\t\t * \n\t\t * @returns {Number} speed in km/h \n\t\t */\n\t\t_bikeSpeed: function(bike) {\n\t\t\tbike = bike || 'cycling-road';\n\t\t\tlet speed = this.options.bikespeed || {\n\t\t\t\t'cycling-road': 25,\n\t\t\t\t'cycling-regular': 20,\n\t\t\t\t'cycling-mountain': 15,\n\t\t\t\t'cycling-electric': 25,\n\t\t\t}\n\t\t\treturn speed[bike] || speed['cycling-regular'];\n\t\t},\n\n\t\t/**\n\t\t * Alias public method for _bikeSpeed()\n\t\t * \n\t\t * @param {String} bike \n\t\t * \n\t\t * @returns {Number} speed in km/h\n\t\t */\n\t\tbikeSpeed: function(bike) {\n\t\t\treturn this._bikeSpeed(bike);\n\t\t},\n\n\t\t/**\n\t\t * Bearing To Direction\n\t\t * \n\t\t * This is adapted from the Leaflet Routing Machine implementation\n\t\t * @see https://github.com/perliedman/leaflet-routing-machine/blob/master/src/osrm-v1.js\n\t\t * \n\t\t * @param {Number} bearing\n\t\t * @return {String} \n\t\t */\n\t\t_bearingToDirection: function(bearing) {\n\t\t\tvar oct = Math.round(bearing / 45) % 8;\n\t\t\treturn ['N', 'NE', 'E', 'SE', 'S', 'SW', 'W', 'NW'][oct];\n\t\t},\n\n\t\t_typeToIcon: function(type, arrive, startseg) {\n\t\t\t/** \n\t\t\t *   0 - Turn left\n\t\t\t *   1 - Turn right\n\t\t\t *   2 - Turn sharp left\n\t\t\t *   3 - Turn sharp right\n\t\t\t *   4 - Turn slight left\n\t\t\t *   5 - Turn slight right\n\t\t\t *   6 - Continue\n\t\t\t *   7 - Enter roundabout\n\t\t\t *   8 - Exit roundabout\n\t\t\t *   9 - U-turn\n\t\t\t *   10 - Finish\n\t\t\t *   11 - Depart\n\t\t\t *   12 - Keep left\n\t\t\t *   13 - Keep right\n\t\t\t *   14 - Unknown\n\t\t\t */\n\t\t\tlet icon = {\n\t\t\t\t'0': 'turn-left',\n\t\t\t\t'1': 'turn-right',\n\t\t\t\t'2': 'sharp-left',\n\t\t\t\t'3': 'sharp-right',\n\t\t\t\t'4': 'bear-left',\n\t\t\t\t'5': 'bear-right',\n\t\t\t\t'6': 'continue',\n\t\t\t\t'7': 'enter-roundabout',\n\t\t\t\t'8': 'exit-roundabout',\n\t\t\t\t'9': 'u-turn',\n\t\t\t\t'10': arrive ? 'arrive' : 'via',\n\t\t\t\t'11': startseg ? 'startseg' : 'depart',\n\t\t\t\t'12': 'turn-left',\n\t\t\t\t'13': 'turn-right',\n\t\t\t\t'14': 'unknown'\n\t\t\t}\n\n\t\t\treturn icon[type] || 'unknown';\n\n\t\t},\n\n\t\t_typeToModifier: function(type, arrive, startseg) {\n\t\t\tlet modifier = {\n\t\t\t\t'0': 'Left',\n\t\t\t\t'1': 'Right',\n\t\t\t\t'2': 'SharpLeft',\n\t\t\t\t'3': 'SharpRight',\n\t\t\t\t'4': 'SlightLeft',\n\t\t\t\t'5': 'SlightRight',\n\t\t\t\t'6': 'Continue',\n\t\t\t\t'7': 'Roundabout',\n\t\t\t\t'8': 'Roundabout',\n\t\t\t\t'9': 'TurnAround',\n\t\t\t\t'10': arrive ? 'DestinationReached' : 'WaypointReached',\n\t\t\t\t'11': startseg ? 'Continue' : 'Head',\n\t\t\t\t'12': 'Left',\n\t\t\t\t'13': 'Right',\n\t\t\t\t'14': 'Onto'\n\t\t\t}\n\n\t\t\treturn modifier[type] || 'Onto'\n\n\t\t},\n\n\t\t/**\n\t\t * Decode an x,y or x,y,z encoded polyline\n\t\t * @param {*} encodedPolyline\n\t\t * @param {Boolean} includeElevation - true for x,y,z polyline\n\t\t * @returns {Array} of L.latLng() coordinates\n\t\t * \n\t\t * @see https://github.com/GIScience/openrouteservice-docs#geometry-decoding\n\t\t */\n\t\t_decodePolyline: (encodedPolyline, includeElevation) => {\n\t\t\t// array that holds the points\n\t\t\tlet points = []\n\t\t\tlet index = 0\n\t\t\tconst len = encodedPolyline.length\n\t\t\tlet lat = 0\n\t\t\tlet lng = 0\n\t\t\tlet ele = 0\n\t\t\twhile (index < len) {\n\t\t\t\tlet b\n\t\t\t\tlet shift = 0\n\t\t\t\tlet result = 0\n\t\t\t\tdo {\n\t\t\t\t\tb = encodedPolyline.charAt(index++).charCodeAt(0) - 63 // finds ascii\n\t\t\t\t\t\t// and subtract it by 63\n\t\t\t\t\tresult |= (b & 0x1f) << shift\n\t\t\t\t\tshift += 5\n\t\t\t\t} while (b >= 0x20)\n\n\t\t\t\tlat += ((result & 1) !== 0 ? ~(result >> 1) : (result >> 1))\n\t\t\t\tshift = 0\n\t\t\t\tresult = 0\n\t\t\t\tdo {\n\t\t\t\t\tb = encodedPolyline.charAt(index++).charCodeAt(0) - 63\n\t\t\t\t\tresult |= (b & 0x1f) << shift\n\t\t\t\t\tshift += 5\n\t\t\t\t} while (b >= 0x20)\n\t\t\t\tlng += ((result & 1) !== 0 ? ~(result >> 1) : (result >> 1))\n\n\t\t\t\tif (includeElevation) {\n\t\t\t\t\tshift = 0\n\t\t\t\t\tresult = 0\n\t\t\t\t\tdo {\n\t\t\t\t\t\tb = encodedPolyline.charAt(index++).charCodeAt(0) - 63\n\t\t\t\t\t\tresult |= (b & 0x1f) << shift\n\t\t\t\t\t\tshift += 5\n\t\t\t\t\t} while (b >= 0x20)\n\t\t\t\t\tele += ((result & 1) !== 0 ? ~(result >> 1) : (result >> 1))\n\t\t\t\t}\n\t\t\t\ttry {\n\t\t\t\t\tlet location = [(lat / 1E5), (lng / 1E5)]\n\t\t\t\t\tif (includeElevation) location.push((ele / 100))\n\t\t\t\t\tpoints.push(L.latLng(location)); //points.push(location)\n\t\t\t\t} catch (e) {\n\t\t\t\t\tconsole.log(e)\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn points\n\t\t},\n\n\t\t_toWaypoints: function(inputWaypoints, vias) {\n\t\t\tlet wps = [];\n\t\t\tfor (let i = 0; i < vias.length; i++) {\n\n\t\t\t\twps.push(new L.Routing.Waypoint(vias[i],\n\t\t\t\t\tinputWaypoints[i].name,\n\t\t\t\t\tinputWaypoints[i].options));\n\t\t\t}\n\n\t\t\treturn wps;\n\t\t},\n\t});\n\n\tL.routing.openrouteservice = function(token, options) {\n\t\treturn new L.Routing.OpenRouteService(token, options);\n\t};\n\n\t/**\n\t * Copyright (c) 20Z0 GÃ©rald Niel (https://framagit.org/gegeweb)\n\t * \n\t * Some parts of the code below:\n\t * Copyright (c) 2014-2019 Per Liedman (https://github.com/perliedman)\n\t * \n\t * Originaly under ISC Licence:\n\t * Permission to use, copy, modify, and/or distribute this software for any purpose \n\t * with or without fee is hereby granted, provided that the above copyright notice \n\t * and this permission notice appear in all copies.\n\t * \n\t * THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH \n\t * REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY \n\t * AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT, \n\t * INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM \n\t * LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR \n\t * OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE \n\t * OF THIS SOFTWARE.\n\t */\n\tL.Routing.FormatterORS = L.Routing.Formatter.extend({\n\t\t/**\n\t\t * Icon name\n\t\t *\n\t\t * @param {String} type\n\t\t * @returns {String}\n\t\t */\n\t\tgetIconName: function(instr, i) {\n\t\t\treturn instr.icon;\n\t\t},\n\n\t\tformatInstruction: function(instr, i) {\n\t\t\tlet text = instr.text || null;\n\t\t\tif (!text || this.options.steptotext) {\n\t\t\t\ttext = this.capitalize(L.Util.template(this._getInstructionTemplate(instr, i),\n\t\t\t\t\tL.extend({}, instr, {\n\t\t\t\t\t\texitStr: instr.exit ? this._localization.localize('formatOrder')(instr.exit) : '',\n\t\t\t\t\t\tdir: this._localization.localize(['directions', instr.direction]),\n\t\t\t\t\t\tmodifier: this._localization.localize(['directions', this.capitalize(instr.modifier)]),\n\t\t\t\t\t\tidseg: instr.idseg\n\t\t\t\t\t})));\n\t\t\t}\n\t\t\treturn text;\n\t\t},\n\n\t\tformatTime: function(t /* Number (seconds) */ ) {\n\t\t\tvar un = this.options.unitNames || this._localization.localize('units');\n\n\t\t\tlet hours = t / 3600,\n\t\t\t\tmin = (hours % 1) * 60,\n\t\t\t\tsec = (min % 1) * 60;\n\t\t\thours = Math.floor(hours);\n\t\t\thours = t > 3600 ? this._formatNum(hours, un.hours) : '';\n\t\t\tmin = Math.floor(min);\n\t\t\tmin = t > 60 ? this._formatNum(min, un.minutes) : '';\n\t\t\tsec = Math.floor(sec);\n\t\t\tsec = this._formatNum(sec, un.seconds);\n\n\t\t\treturn hours + min + sec;\n\t\t},\n\n\t\t_formatNum: function(number, unit) {\n\t\t\tlet prefix = number < 10 ? '0' : '';\n\t\t\treturn prefix + number + (unit || '');\n\t\t},\n\n\t\t_getInstructionTemplate: function(instr, i) {\n\t\t\tlet strings = this._localization.localize(['instructions', this.capitalize(instr.modifier)]);\n\t\t\tif (!strings)\n\t\t\t\tstrings = [\n\t\t\t\t\tthis._localization.localize(['directions', instr.modifier]),\n\t\t\t\t\t' ' + this._localization.localize(['instructions', 'Onto'])\n\t\t\t\t];\n\t\t\treturn strings[0] + (strings.length > 1 && instr.road ? strings[1] : '');\n\t\t},\n\n\t});\n\n\tL.routing.formatterORS = function(options) {\n\t\treturn new L.Routing.FormatterORS(options);\n\t};\n\n}));\n// @license-end"],"names":["factory","L","define","amd","module","require","exports","window","Routing","routing","OpenRouteService","Class","extend","version","options","timeout","host","service","api_version","profile","routingQueryParams","attributes","language","maneuvers","preference","initialize","token","Util","setOptions","this","_token","route","waypoints","callback","context","timer","timedOut","wps","coords","opts","params","setTimeout","call","status","message","forEach","wp","c","latLng","push","name","lng","lat","coordinates","_requestPost","then","datas","clearTimeout","error","err","response","resp","JSON","parse","code","e","console","format","_routeDone","catch","[object Object]","url","_buildUrl","method","headers","_setHeaders","body","stringify","fetch","ok","text","json","statusText","Error","api_key","Headers","append","inputWaypoints","alts","isgeoJSON","features","routes","idr","geom","geometry","instructions","summary","properties","way_points","segments","elevation","_decodePolyline","speed","_bikeSpeed","tmp","Array","length","i","latlng","routeWaypoints","segment","ids","steps","lastsegment","step","idx","laststep","arrive","startseg","idseg","distance","time","road","instruction","icon","_typeToIcon","type","exit","exit_number","modifier","_typeToModifier","direction","_bearingToDirection","maneuver","bearing_after","index","totalTime","totalDistance","totalAscend","ascent","totalDescend","descent","_toWaypoints","waypointIndices","bike","bikespeed","cycling-road","cycling-regular","cycling-mountain","cycling-electric","bikeSpeed","bearing","Math","round","0","1","2","3","4","5","6","7","8","9","10","11","12","13","14","encodedPolyline","includeElevation","points","len","ele","b","shift","result","charAt","charCodeAt","location","log","vias","Waypoint","openrouteservice","FormatterORS","Formatter","getIconName","instr","formatInstruction","steptotext","capitalize","template","_getInstructionTemplate","exitStr","_localization","localize","dir","formatTime","t","un","unitNames","hours","min","sec","floor","_formatNum","minutes","seconds","number","unit","strings","formatterORS"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;KA6BC,SAASA,GAET,IAAIC,EACJ,GAAsB,mBAAXC,QAAyBA,OAAOC,IAE1CD,OAAO,CAAC,WAAYF,QACd,GAAsB,oBAAXI,OAEjBH,EAAII,QAAQ,WACZD,OAAOE,QAAUN,EAAQC,OACnB,CAEN,QAAwB,IAAbM,OAAON,EACjB,KAAM,+BACP,QAAgC,IAArBM,OAAON,EAAEO,QACnB,KAAM,+CACPR,EAAQO,OAAON,IAhBjB,EAkBE,SAASA,GAEVA,EAAEO,QAAUP,EAAEO,SAAW,GACzBP,EAAEQ,QAAUR,EAAEQ,SAAW,GAEzBR,EAAEO,QAAQE,iBAAmBT,EAAEU,MAAMC,OAAO,CAC3CC,QAAS,QACTC,QAAS,CACRC,QAAW,IACXC,KAAQ,mCACRC,QAAW,aACXC,YAAe,KACfC,QAAW,eACXC,mBAAsB,CACrBC,WAAc,CACb,WACA,cAEDC,SAAY,QACZC,UAAa,OACbC,WAAc,gBAIhBC,WAAY,SAASC,EAAOZ,GAC3Bb,EAAE0B,KAAKC,WAAWC,KAAMf,GACxBe,KAAKC,OAASJ,GAGfK,MAAO,SAASC,EAAWC,EAAUC,EAASpB,GAE7C,IAECqB,EAFGC,GAAW,EACdC,EAAM,GAENC,EAAS,GACTC,EAAOV,KAAKf,SAAW,GACvB0B,EAASD,EAAKnB,oBAAsB,GAoErC,OAlEAe,EAAQM,YAAW,WAClBL,GAAW,EACXH,EAASS,KAAKR,GAAWD,EAAU,CAClCU,QAAS,EACTC,QAAS,2CAERL,EAAKxB,SAMRiB,EAAUa,QAASC,IAClB,IAAIC,EAAID,EAAGE,OACXX,EAAIY,KAAK,CACRD,OAAQF,EAAGE,OACXE,KAAMJ,EAAGI,KACTpC,QAASgC,EAAGhC,UAIbwB,EAAOW,KAAK,CAACF,EAAEI,IAAKJ,EAAEK,QAGvBnD,EAAEW,OAAO4B,EAAQ,CAAEa,YAAaf,IAElBT,KAAKyB,aAAad,GAExBe,KAAKC,IACX,IAAKpB,EAEJ,GADAqB,aAAatB,GACTqB,EAAME,MAAO,CAChB,IAAIC,EAAMH,EAAME,MAChBF,EAAMI,SAASL,KAAKM,IACnB,IACKA,IACHA,EAAOC,KAAKC,MAAMF,GAClBF,EAAIhB,OAASkB,EAAKH,MAAMM,KACxBL,EAAIf,QAAUiB,EAAKH,MAAMd,SAE1BX,EAASS,KAAKR,GAAWD,EAAU,CAClCU,OAAQgB,EAAIhB,SAAW,EACvBC,QAASe,EAAIf,UAEb,MAAOqB,GACRC,QAAQR,MAAMO,UAIG,OAAf1B,EAAK4B,OACRlC,EAASS,KAAKR,GAAWD,EAAUuB,GAEnC3B,KAAKuC,WAAWZ,EAAOnB,EAAKJ,EAAUC,KAIzCmC,MAAMV,IACDvB,IACJqB,aAAatB,GACbF,EAASS,KAAKR,GAAWD,EAAU,CAClCU,OAAQgB,EAAIhB,SAAW,EACvBC,QAASe,EAAIf,aAKVf,MAGRyC,aAAa9B,GAEZ,IAAI+B,EAAM1C,KAAK2C,YAEdjC,EAAO,CACNkC,OAAQ,OACRC,QAHS7C,KAAK8C,cAIdC,KAAMd,KAAKe,UAAUrC,IAEtB2B,EAAStC,KAAKf,QAAQqD,OAkBvB,OAhBgBW,MAAMP,EAAKhC,GACzBgB,KAAKK,IACL,GAAIA,EAASmB,GACZ,MAAc,OAAVZ,EACIP,EAASoB,OAETpB,EAASqB,OACX,CACN,IAAItC,EAASiB,EAASjB,OACrBC,EAAUgB,EAASsB,WACnBvB,EAAM,IAAIwB,MAAMvC,GAEjB,OADAe,EAAIhB,OAASA,EACN,CAAEe,MAAOC,EAAKC,SAAUA,EAASoB,YAgB5CR,UAAW,SAASjC,GAEnB,IAAIgC,GADJhC,EAAOA,GAAQV,KAAKf,SACLE,MAAQ,mCAMvB,OALAuD,GAAO,KAAKhC,EAAKrB,aAAe,MAChCqD,GAAO,KAAKhC,EAAKtB,SAAW,cAC5BsD,GAAO,KAAKhC,EAAKpB,SAAW,gBAC5BoD,GAAOhC,EAAK4B,OAAS,IAAI5B,EAAK4B,OAAW,GAElCI,GAURI,YAAa,SAASS,GACrBA,EAAUA,GAAWvD,KAAKC,OAC1B,IAAI4C,EAAU,IAAIW,QAKlB,OAJAX,EAAQY,OAAO,SAAU,uFACzBZ,EAAQY,OAAO,eAAgB,oBAC/BZ,EAAQY,OAAO,gBAAiBF,GAEzBV,GAGRN,WAAY,SAASZ,EAAO+B,EAAgBtD,EAAUC,GAMrD,IAAIsD,EAAO,GAEVC,EAAuB,YADd5D,KAAKf,QAAQqD,QAEbsB,EAAYjC,EAAMkC,SAAWlC,EAAMmC,QAMtC9C,QAAQ,CAACd,EAAO6D,KACtB,IAAIC,EAAO9D,EAAM+D,SAChBC,EAAe,GACfC,EAAUP,EAAY1D,EAAMkE,WAAWD,QAAUjE,EAAMiE,QACvDE,EAAaT,EAAY1D,EAAMkE,WAAWC,WAAanE,EAAMmE,WAC7DC,EAAWV,EAAY1D,EAAMkE,WAAWE,SAAWpE,EAAMoE,SACzD5D,EAAOV,KAAKf,QAAQM,mBACpBgF,EAAgC,SAAnB7D,EAAK6D,YAA2C,IAAnB7D,EAAK6D,UAC/C/C,EAAcoC,EAAYI,EAAKxC,YAAcxB,KAAKwE,gBAAgBR,EAAMO,GACxEE,EAAQzE,KAAK0E,WAAW1E,KAAKf,QAAQK,SAMtC,GAAIsE,EAAW,CACd,IAAIe,EAAM,IAAIC,MAAMpD,EAAYqD,QAChCrD,EAAYR,QAAQ,CAACE,EAAG4D,KACvB,IAAIC,EAAS,CAAC7D,EAAE,GAAIA,EAAE,IAClBqD,GACHQ,EAAO3D,KAAa,aAARF,EAAE,GAAoBA,EAAE,GAAK,MAC1CyD,EAAIG,GAAK1G,EAAE+C,OAAO4D,KAEnBvD,EAAcmD,EAGf,IAAIK,EAAiB,IAAIJ,MAAMP,EAAWQ,QAC1C,IAAK,IAAIC,EAAI,EAAGA,EAAIT,EAAWQ,OAAQC,IACtCE,EAAeF,GAAKtD,EAAY6C,EAAWS,IAO5CR,EAAStD,QAAQ,CAACiE,EAASC,KAC1B,IAAIC,EAAQF,EAAQE,MACnBC,EAAcF,GAAOZ,EAASO,OAAS,EACxCM,EAAMnE,QAAQ,CAACqE,EAAMC,KACpB,IAAIC,EAAWD,GAAOH,EAAMN,OAAS,EACpCW,EAAUJ,GAAeG,EACzBE,EAAmB,GAAPH,GAAYJ,EAAM,EAE/BhB,EAAa9C,KAAK,CACjBsE,MAAOR,EAAM,EACbS,SAAUN,EAAKM,SACfC,KAAOP,EAAKM,SAAWlB,EApCjB,IAqCNoB,KAAoB,MAAdR,EAAKhE,KAAe,GAAKgE,EAAKhE,KACpC8B,KAAMkC,EAAKS,aAAe,KAC1BC,KAAM/F,KAAKgG,YAAYX,EAAKY,KAAMT,EAAQC,GAC1CQ,KAAMZ,EAAKY,KACXC,KAAMb,EAAKc,aAAe,KAC1BC,SAAUpG,KAAKqG,gBAAgBhB,EAAKY,KAAMT,EAAQC,GAClDa,UAAWtG,KAAKuG,oBAAoBlB,EAAKmB,SAASC,eAClDC,MAAOrB,EAAKhB,WAAW,SAQ1BV,EAAKvC,KAAK,CACTC,KAAM,eACNG,YAAaA,EACb0C,aAAcA,EACdC,QAAS,CACRwC,UAAYxC,EAAQwB,SAAWlB,EAzDxB,IA0DPmC,cAAezC,EAAQwB,SACvBkB,YAAajD,EAAY1D,EAAMkE,WAAW0C,OAAS3C,EAAQ2C,OAC3DC,aAAcnD,EAAY1D,EAAMkE,WAAW4C,QAAU7C,EAAQ6C,SAE9DtD,eAAgBA,EAEhBvD,UAAWH,KAAKiH,aAAavD,EAAgBsB,GAC7CkC,gBAAiB7C,MAOnBjE,EAASS,KAAKR,EAAS,KAAMsD,IAU9Be,WAAY,SAASyC,GACpBA,EAAOA,GAAQ,eACf,IAAI1C,EAAQzE,KAAKf,QAAQmI,WAAa,CACrCC,eAAgB,GAChBC,kBAAmB,GACnBC,mBAAoB,GACpBC,mBAAoB,IAErB,OAAO/C,EAAM0C,IAAS1C,EAAM,oBAU7BgD,UAAW,SAASN,GACnB,OAAOnH,KAAK0E,WAAWyC,IAYxBZ,oBAAqB,SAASmB,GAE7B,MAAO,CAAC,IAAK,KAAM,IAAK,KAAM,IAAK,KAAM,IAAK,MADpCC,KAAKC,MAAMF,EAAU,IAAM,IAItC1B,YAAa,SAASC,EAAMT,EAAQC,GAoCnC,MAlBW,CACVoC,EAAK,YACLC,EAAK,aACLC,EAAK,aACLC,EAAK,cACLC,EAAK,YACLC,EAAK,aACLC,EAAK,WACLC,EAAK,mBACLC,EAAK,kBACLC,EAAK,SACLC,GAAM/C,EAAS,SAAW,MAC1BgD,GAAM/C,EAAW,WAAa,SAC9BgD,GAAM,YACNC,GAAM,aACNC,GAAM,WAGK1C,IAAS,WAItBI,gBAAiB,SAASJ,EAAMT,EAAQC,GAmBvC,MAlBe,CACdoC,EAAK,OACLC,EAAK,QACLC,EAAK,YACLC,EAAK,aACLC,EAAK,aACLC,EAAK,cACLC,EAAK,WACLC,EAAK,aACLC,EAAK,aACLC,EAAK,aACLC,GAAM/C,EAAS,qBAAuB,kBACtCgD,GAAM/C,EAAW,WAAa,OAC9BgD,GAAM,OACNC,GAAM,QACNC,GAAM,QAGS1C,IAAS,QAY1BzB,gBAAiB,CAACoE,EAAiBC,KAElC,IAAIC,EAAS,GACTpC,EAAQ,EACZ,MAAMqC,EAAMH,EAAgB/D,OAC5B,IAAItD,EAAM,EACND,EAAM,EACN0H,EAAM,EACV,KAAOtC,EAAQqC,GAAK,CACnB,IAAIE,EACAC,EAAQ,EACRC,EAAS,EACb,GACCF,EAAIL,EAAgBQ,OAAO1C,KAAS2C,WAAW,GAAK,GAEpDF,IAAe,GAAJF,IAAaC,EACxBA,GAAS,QACDD,GAAK,IAEd1H,GAAyB,IAAP,EAAT4H,KAAsBA,GAAU,GAAMA,GAAU,EACzDD,EAAQ,EACRC,EAAS,EACT,GACCF,EAAIL,EAAgBQ,OAAO1C,KAAS2C,WAAW,GAAK,GACpDF,IAAe,GAAJF,IAAaC,EACxBA,GAAS,QACDD,GAAK,IAGd,GAFA3H,GAAyB,IAAP,EAAT6H,KAAsBA,GAAU,GAAMA,GAAU,EAErDN,EAAkB,CACrBK,EAAQ,EACRC,EAAS,EACT,GACCF,EAAIL,EAAgBQ,OAAO1C,KAAS2C,WAAW,GAAK,GACpDF,IAAe,GAAJF,IAAaC,EACxBA,GAAS,QACDD,GAAK,IACdD,GAAyB,IAAP,EAATG,KAAsBA,GAAU,GAAMA,GAAU,EAE1D,IACC,IAAIG,EAAW,CAAE/H,EAAM,IAAOD,EAAM,KAChCuH,GAAkBS,EAASlI,KAAM4H,EAAM,KAC3CF,EAAO1H,KAAKhD,EAAE+C,OAAOmI,IACpB,MAAOlH,GACRC,QAAQkH,IAAInH,IAGd,OAAO0G,GAGR7B,aAAc,SAASvD,EAAgB8F,GACtC,IAAIhJ,EAAM,GACV,IAAK,IAAIsE,EAAI,EAAGA,EAAI0E,EAAK3E,OAAQC,IAEhCtE,EAAIY,KAAK,IAAIhD,EAAEO,QAAQ8K,SAASD,EAAK1E,GACpCpB,EAAeoB,GAAGzD,KAClBqC,EAAeoB,GAAG7F,UAGpB,OAAOuB,KAITpC,EAAEQ,QAAQ8K,iBAAmB,SAAS7J,EAAOZ,GAC5C,OAAO,IAAIb,EAAEO,QAAQE,iBAAiBgB,EAAOZ,IAsB9Cb,EAAEO,QAAQgL,aAAevL,EAAEO,QAAQiL,UAAU7K,OAAO,CAOnD8K,YAAa,SAASC,EAAOhF,GAC5B,OAAOgF,EAAM/D,MAGdgE,kBAAmB,SAASD,EAAOhF,GAClC,IAAI3B,EAAO2G,EAAM3G,MAAQ,KAUzB,OATKA,IAAQnD,KAAKf,QAAQ+K,aACzB7G,EAAOnD,KAAKiK,WAAW7L,EAAE0B,KAAKoK,SAASlK,KAAKmK,wBAAwBL,EAAOhF,GAC1E1G,EAAEW,OAAO,GAAI+K,EAAO,CACnBM,QAASN,EAAM5D,KAAOlG,KAAKqK,cAAcC,SAAS,cAA5BtK,CAA2C8J,EAAM5D,MAAQ,GAC/EqE,IAAKvK,KAAKqK,cAAcC,SAAS,CAAC,aAAcR,EAAMxD,YACtDF,SAAUpG,KAAKqK,cAAcC,SAAS,CAAC,aAActK,KAAKiK,WAAWH,EAAM1D,YAC3EV,MAAOoE,EAAMpE,WAGTvC,GAGRqH,WAAY,SAASC,GACpB,IAAIC,EAAK1K,KAAKf,QAAQ0L,WAAa3K,KAAKqK,cAAcC,SAAS,SAE/D,IAAIM,EAAQH,EAAI,KACfI,EAAOD,EAAQ,EAAK,GACpBE,EAAOD,EAAM,EAAK,GAQnB,OAPAD,EAAQjD,KAAKoD,MAAMH,GACnBA,EAAQH,EAAI,KAAOzK,KAAKgL,WAAWJ,EAAOF,EAAGE,OAAS,GACtDC,EAAMlD,KAAKoD,MAAMF,GACjBA,EAAMJ,EAAI,GAAKzK,KAAKgL,WAAWH,EAAKH,EAAGO,SAAW,GAClDH,EAAMnD,KAAKoD,MAAMD,GACjBA,EAAM9K,KAAKgL,WAAWF,EAAKJ,EAAGQ,SAEvBN,EAAQC,EAAMC,GAGtBE,WAAY,SAASG,EAAQC,GAE5B,OADaD,EAAS,GAAK,IAAM,IACjBA,GAAUC,GAAQ,KAGnCjB,wBAAyB,SAASL,EAAOhF,GACxC,IAAIuG,EAAUrL,KAAKqK,cAAcC,SAAS,CAAC,eAAgBtK,KAAKiK,WAAWH,EAAM1D,YAMjF,OALKiF,IACJA,EAAU,CACTrL,KAAKqK,cAAcC,SAAS,CAAC,aAAcR,EAAM1D,WACjD,IAAMpG,KAAKqK,cAAcC,SAAS,CAAC,eAAgB,WAE9Ce,EAAQ,IAAMA,EAAQxG,OAAS,GAAKiF,EAAMjE,KAAOwF,EAAQ,GAAK,OAKvEjN,EAAEQ,QAAQ0M,aAAe,SAASrM,GACjC,OAAO,IAAIb,EAAEO,QAAQgL,aAAa1K"}