!function(t){"function"==typeof define&&define.amd?define(t):t()}((function(){"use strict";
/* @preserve
	 *
	 * Leaflet Routing Machine / OpenRoute Service
	 * Version 0.1.9
	 * 
	 * Extends Leaflet Routing Machine with support for OpenRoute Service
	 * https://openrouteservice.org/dev/#/api-docs/v2/directions/
	 * 
	 * ## Dependancies:
	 * - Leaflet Routing Machine http://www.liedman.net/leaflet-routing-machine/
	 * 
	 * This plugin is free software: you can redistribute it and/or modify
	 * it under the terms of the GNU Affero General Public License as 
	 * published by the Free Software Foundation, either version 3 of the 
	 * License, or (at your option) any later version.
	 * 
	 * This plugin is distributed in the hope that it will be useful,
	 * but WITHOUT ANY WARRANTY; without even the implied warranty of
	 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. 
	 * See the GNU Affero General Public License for more details.
	 * 
	 * You should have received a copy of the GNU Affero General Public License
	 * along with this program. If not, see <https://www.gnu.org/licenses/>
	 * 
	 * Copyright (c) 20Z0 Gérald Niel (https://framagit.org/gegeweb)
	 * 
	 * @license magnet:?xt=urn:btih:0b31508aeb0634b347b8270c7bee4d411b5d4109&dn=agpl-3.0.txt AGPL-v3-or-later
	 */!function(t){var e;if("function"==typeof define&&define.amd)define(["leaflet"],t);else if("undefined"!=typeof module)e=require("leaflet"),module.exports=t(e);else{if(void 0===window.L)throw"Leaflet must be loaded first";if(void 0===window.L.Routing)throw"Leaflet Routing Machine must be loaded first";t(window.L)}}((function(t){t.Routing=t.Routing||{},t.routing=t.routing||{},t.Routing.OpenRouteService=t.Class.extend({version:"0.1.9",options:{timeout:3e4,host:"https://api.openrouteservice.org",service:"directions",api_version:"v2",profile:"cycling-road",routingQueryParams:{attributes:["avgspeed","percentage"],language:"fr-fr",maneuvers:"true",preference:"recommended"}},initialize:function(e,i){t.Util.setOptions(this,i),this._token=e},route:function(e,i,n,o){let r,s=!1,a=[],u=[],l=this.options||{},c=l.routingQueryParams||{};return r=setTimeout((function(){s=!0,i.call(n||i,{status:-1,message:"OpenRoute Service request timed out."})}),l.timeout),e.forEach(t=>{let e=t.latLng;a.push({latLng:t.latLng,name:t.name,options:t.options}),u.push([e.lng,e.lat])}),t.extend(c,{coordinates:u}),this._requestPost(c).then(t=>{if(!s)if(clearTimeout(r),t.error){let e=t.error;t.response.then(t=>{try{t&&(t=JSON.parse(t),e.status=t.error.code,e.message=t.error.message),i.call(n||i,{status:e.status||-1,message:e.message})}catch(t){console.error(t)}})}else"gpx"==l.format?i.call(n||i,t):this._routeDone(t,a,i,n)}).catch(t=>{s||(clearTimeout(r),i.call(n||i,{status:t.status||-1,message:t.message}))}),this},_requestPost(t){let e=this._buildUrl(),i={method:"POST",headers:this._setHeaders(),body:JSON.stringify(t)},n=this.options.format;return fetch(e,i).then(t=>{if(t.ok)return"gpx"==n?t.text():t.json();{let e=t.status,i=t.statusText,n=new Error(i);return n.status=e,{error:n,response:t.text()}}})},_buildUrl:function(t){let e=(t=t||this.options).host||"https://api.openrouteservice.org";return e+="/"+(t.api_version||"v2"),e+="/"+(t.service||"directions"),e+="/"+(t.profile||"cycling_road"),e+=t.format?"/"+t.format:"",e},_setHeaders:function(t){t=t||this._token;let e=new Headers;return e.append("Accept","application/json, application/geo+json, application/gpx+xml, img/png; charset=utf-8"),e.append("Content-Type","application/json"),e.append("Authorization",t),e},_routeDone:function(e,i,n,o){let r=[],s="geojson"===this.options.format;(s?e.features:e.routes).forEach((e,n)=>{let o=e.geometry,a=[],u=s?e.properties.summary:e.summary,l=s?e.properties.way_points:e.way_points,c=s?e.properties.segments:e.segments,p=this.options.routingQueryParams,d="true"===p.elevation||!0===p.elevation,h=s?o.coordinates:this._decodePolyline(o,d),f=this._bikeSpeed(this.options.profile);if(s){let e=new Array(h.length);h.forEach((i,n)=>{let o=[i[1],i[0]];d&&o.push("unedifned"!=i[2]?i[2]:null),e[n]=t.latLng(o)}),h=e}let g=new Array(l.length);for(let t=0;t<l.length;t++)g[t]=h[l[t]];c.forEach((t,e)=>{let i=t.steps,n=e==c.length-1;i.forEach((t,o)=>{let r=o==i.length-1,s=n&&r,u=0==o&&e>0;a.push({idseg:e+1,distance:t.distance,time:t.distance/f*3.6,road:"-"===t.name?"":t.name,text:t.instruction||null,icon:this._typeToIcon(t.type,s,u),type:t.type,exit:t.exit_number||null,modifier:this._typeToModifier(t.type,s,u),direction:this._bearingToDirection(t.maneuver.bearing_after),index:t.way_points[0]})})}),r.push({name:"Initinéraire",coordinates:h,instructions:a,summary:{totalTime:u.distance/f*3.6,totalDistance:u.distance,totalAscend:s?e.properties.ascent:u.ascent,totalDescend:s?e.properties.descent:u.descent},inputWaypoints:i,waypoints:this._toWaypoints(i,g),waypointIndices:l})}),n.call(o,null,r)},_bikeSpeed:function(t){t=t||"cycling-road";let e=this.options.bikespeed||{"cycling-road":25,"cycling-regular":20,"cycling-mountain":15,"cycling-electric":25};return e[t]||e["cycling-regular"]},bikeSpeed:function(t){return this._bikeSpeed(t)},_bearingToDirection:function(t){return["N","NE","E","SE","S","SW","W","NW"][Math.round(t/45)%8]},_typeToIcon:function(t,e,i){return{0:"turn-left",1:"turn-right",2:"sharp-left",3:"sharp-right",4:"bear-left",5:"bear-right",6:"continue",7:"enter-roundabout",8:"exit-roundabout",9:"u-turn",10:e?"arrive":"via",11:i?"startseg":"depart",12:"turn-left",13:"turn-right",14:"unknown"}[t]||"unknown"},_typeToModifier:function(t,e,i){return{0:"Left",1:"Right",2:"SharpLeft",3:"SharpRight",4:"SlightLeft",5:"SlightRight",6:"Continue",7:"Roundabout",8:"Roundabout",9:"TurnAround",10:e?"DestinationReached":"WaypointReached",11:i?"Continue":"Head",12:"Left",13:"Right",14:"Onto"}[t]||"Onto"},_decodePolyline:(e,i)=>{let n=[],o=0;const r=e.length;let s=0,a=0,u=0;for(;o<r;){let r,l=0,c=0;do{r=e.charAt(o++).charCodeAt(0)-63,c|=(31&r)<<l,l+=5}while(r>=32);s+=0!=(1&c)?~(c>>1):c>>1,l=0,c=0;do{r=e.charAt(o++).charCodeAt(0)-63,c|=(31&r)<<l,l+=5}while(r>=32);if(a+=0!=(1&c)?~(c>>1):c>>1,i){l=0,c=0;do{r=e.charAt(o++).charCodeAt(0)-63,c|=(31&r)<<l,l+=5}while(r>=32);u+=0!=(1&c)?~(c>>1):c>>1}try{let e=[s/1e5,a/1e5];i&&e.push(u/100),n.push(t.latLng(e))}catch(t){console.log(t)}}return n},_toWaypoints:function(e,i){let n=[];for(let o=0;o<i.length;o++)n.push(new t.Routing.Waypoint(i[o],e[o].name,e[o].options));return n}}),t.routing.openrouteservice=function(e,i){return new t.Routing.OpenRouteService(e,i)},t.Routing.FormatterORS=t.Routing.Formatter.extend({getIconName:function(t,e){return t.icon},formatInstruction:function(e,i){let n=e.text||null;return n&&!this.options.steptotext||(n=this.capitalize(t.Util.template(this._getInstructionTemplate(e,i),t.extend({},e,{exitStr:e.exit?this._localization.localize("formatOrder")(e.exit):"",dir:this._localization.localize(["directions",e.direction]),modifier:this._localization.localize(["directions",this.capitalize(e.modifier)]),idseg:e.idseg})))),n},formatTime:function(t){var e=this.options.unitNames||this._localization.localize("units");let i=t/3600,n=i%1*60,o=n%1*60;return i=Math.floor(i),i=t>3600?this._formatNum(i,e.hours):"",n=Math.floor(n),n=t>60?this._formatNum(n,e.minutes):"",o=Math.floor(o),o=this._formatNum(o,e.seconds),i+n+o},_formatNum:function(t,e){return(t<10?"0":"")+t+(e||"")},_getInstructionTemplate:function(t,e){let i=this._localization.localize(["instructions",this.capitalize(t.modifier)]);return i||(i=[this._localization.localize(["directions",t.modifier])," "+this._localization.localize(["instructions","Onto"])]),i[0]+(i.length>1&&t.road?i[1]:"")}}),t.routing.formatterORS=function(e){return new t.Routing.FormatterORS(e)}}))}));
//# sourceMappingURL=leaflet-routing-openroute.min.js.map
